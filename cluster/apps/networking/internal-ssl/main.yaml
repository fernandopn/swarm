---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-internal-config
data:
  magrathea.conf: |2
    server {
      listen 80;
      listen [::]:80;
      server_name magrathea.${SECRET_DOMAIN};

      location / {
        proxy_pass https://10.0.6.254:5001/;
      }
    }
  pikvm.conf: |2
    server {
      listen 80;
      listen [::]:80;
      server_name pikvm.${SECRET_DOMAIN};

      location / {
        proxy_pass https://10.0.6.100/;
      }
    }
  default.conf: |2
    server {
      listen       80;
      listen  [::]:80;
      server_name  localhost;
      location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
      }
      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
        root   /usr/share/nginx/html;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-mirror
  labels:
    app: nginx-mirror
spec:
  replicas: 1
  strategy: # Need to turn down then turn up (depend on one persistent volume)
    type: Recreate
  selector:
    matchLabels:
      app: nginx-mirror
  template:
    metadata:
      labels:
        app: nginx-mirror
      annotations:
        configmap.reloader.stakater.com/reload: nginx-internal-config
    spec:
      containers:
        - name: nginx-mirror
          image: nginx:1.21.6
          ports:
            - name: http
              containerPort: 80
          resources:
            requests:
              memory: "512Mi"
              cpu: "0.5"
            limits:
              memory: "2Gi"
              cpu: "2"
          volumeMounts:
            - name: config-volume
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: config-volume
          configMap:
            name: nginx-internal-config
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-mirror
spec:
  ports:
    - name: http
      targetPort: 80
      port: 80
  selector:
    app: nginx-mirror
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-mirror
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}
    nginx.ingress.kubernetes.io/auth-url: https://auth.${SECRET_DOMAIN}/api/verify
spec:
  rules:
    - host: magrathea.${SECRET_DOMAIN}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-mirror
                port:
                  number: 80
    - host: pikvm.${SECRET_DOMAIN}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-mirror
                port:
                  number: 80
  tls:
    - hosts:
        - magrathea.${SECRET_DOMAIN}
      secretName: magrathea-tls
    - hosts:
        - pikvm.${SECRET_DOMAIN}
      secretName: pikvm-tls